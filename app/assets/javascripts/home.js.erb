$(function(){
  var map, featureList, parkSearch = [], boundarySearch = [];

  $(document).on("click", ".feature-row", function(e) {
    sidebarClick(parseInt($(this).attr("id"), 10));
  });

  $("#about-btn").click(function() {
    $("#aboutModal").modal("show");
    $(".navbar-collapse.in").collapse("hide");
    return false;
  });

  $("#list-btn").click(function() {
    $('#sidebar').toggle();
    map.invalidateSize();
    return false;
  });

  $("#equipment-search-btn").click(function() {
    $("#equipmentSearchModal").modal("show");
    $(".navbar-collapse.in").collapse("hide");
    return false;
  });

  $("#age-limit-btn").click(function() {
    $("#ageLimitModal").modal("show");
    $(".navbar-collapse.in").collapse("hide");
    return false;
  });

  $("#nav-btn").click(function() {
    $(".navbar-collapse").collapse("toggle");
    return false;
  });

  $("#sidebar-toggle-btn").click(function() {
    $("#sidebar").toggle();
    map.invalidateSize();
    return false;
  });

  $("#sidebar-hide-btn").click(function() {
    $('#sidebar').hide();
    map.invalidateSize();
  });

  function sidebarClick(id) {
    map.addLayer(parkLayer);
    var layer = markerClusters.getLayer(id);
    map.setView([layer.getLatLng().lat, layer.getLatLng().lng], 17);
    layer.fire("click");
    /* Hide sidebar and go to the map on small screens */
    if (document.body.clientWidth <= 767) {
      $("#sidebar").hide();
      map.invalidateSize();
    }
  }

  /* Basemap Layers */
  var mapquestOSM = L.tileLayer("http://{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png", {
    maxZoom: 19,
    subdomains: ["otile1", "otile2", "otile3", "otile4"],
    attribution: 'Tiles courtesy of <a href="http://www.mapquest.com/" target="_blank">MapQuest</a> <img src="http://developer.mapquest.com/content/osm/mq_logo.png">. Map data (c) <a href="http://www.openstreetmap.org/" target="_blank">OpenStreetMap</a> contributors, CC-BY-SA.'
  });
  var mapquestOAM = L.tileLayer("http://{s}.mqcdn.com/tiles/1.0.0/sat/{z}/{x}/{y}.jpg", {
    maxZoom: 18,
    subdomains: ["oatile1", "oatile2", "oatile3", "oatile4"],
    attribution: 'Tiles courtesy of <a href="http://www.mapquest.com/" target="_blank">MapQuest</a>. Portions Courtesy NASA/JPL-Caltech and U.S. Depart. of Agriculture, Farm Service Agency'
  });
  var mapquestHYB = L.layerGroup([L.tileLayer("http://{s}.mqcdn.com/tiles/1.0.0/sat/{z}/{x}/{y}.jpg", {
    maxZoom: 18,
    subdomains: ["oatile1", "oatile2", "oatile3", "oatile4"]
  }), L.tileLayer("http://{s}.mqcdn.com/tiles/1.0.0/hyb/{z}/{x}/{y}.png", {
    maxZoom: 19,
    subdomains: ["oatile1", "oatile2", "oatile3", "oatile4"],
    attribution: 'Labels courtesy of <a href="http://www.mapquest.com/" target="_blank">MapQuest</a> <img src="http://developer.mapquest.com/content/osm/mq_logo.png">. Map data (c) <a href="http://www.openstreetmap.org/" target="_blank">OpenStreetMap</a> contributors, CC-BY-SA. Portions Courtesy NASA/JPL-Caltech and U.S. Depart. of Agriculture, Farm Service Agency'
  })]);

  var cyberjapanStd = L.tileLayer("http://cyberjapandata.gsi.go.jp/xyz/std/{z}/{x}/{y}.png", {
    maxZoom: 18,
    attribution: "<a href='http://www.gsi.go.jp/kikakuchousei/kikakuchousei40182.html' target='_blank'>国土地理院</a>"
  });

  var cyberjapanPale = L.tileLayer("http://cyberjapandata.gsi.go.jp/xyz/pale/{z}/{x}/{y}.png", {
    maxZoom: 18,
    attribution: "<a href='http://www.gsi.go.jp/kikakuchousei/kikakuchousei40182.html' target='_blank'>国土地理院</a>"
  });

  /* Overlay Layers */
  var highlight = L.geoJson(null);

  var boundaries = L.geoJson(null, {
    style: function (feature) {
      return {
        color: "#6666FF",
        fill: false,
        opacity: 0.7,
        clickable: false
      };
    },
    onEachFeature: function (feature, layer) {
      boundarySearch.push({
        name: layer.feature.properties.BoundaryName,
        source: "境界線",
        id: L.stamp(layer),
        bounds: layer.getBounds()
      });
    }
  });
  /*$.getJSON("/static_data/boundary-kanazawa-ku.geojson", function (data) {
    boundaries.addData(data);
  });*/

  /* Single marker cluster layer to hold all clusters */
  var markerClusters = new L.MarkerClusterGroup({
    spiderfyOnMaxZoom: true,
    showCoverageOnHover: false,
    zoomToBoundsOnClick: true,
    disableClusteringAtZoom: 16
  });

  /* Empty layer placeholder to add to layer control for listening when to add/remove parks to markerClusters layer */
  var parkLayer = L.geoJson(null);
  var parks = L.geoJson(null, {
    pointToLayer: function (feature, latlng) {
      return L.marker(latlng, {
        icon: L.icon({
          iconUrl: '<%= asset_path('marker-icon.png') %>',
          iconSize: [25, 41],
          iconAnchor: [12, 28],
          popupAnchor: [0, -25]
        }),
        title: feature.properties.name,
        riseOnHover: true
      });
    },
    onEachFeature: function (feature, layer) {
      if (feature.properties) {
        var content = "<table class='table table-striped table-bordered table-condensed'>" + "<tr><th>座標</th><td>" + feature.properties.lat + ", " + feature.properties.long + "</td></tr>" + "<tr><th>詳細</th><td><a class='url-break' href='" + feature.properties.park + "' target='_blank'>" + feature.properties.park + "</a></td></tr>" + "<table>";
        layer.on({
          click: function (e) {
            $("#feature-title").html(feature.properties.label);
            $("#feature-info").html(content);
            $("#featureModal").modal("show");
            highlight.clearLayers().addLayer(L.circleMarker([feature.geometry.coordinates[1], feature.geometry.coordinates[0]], {
              stroke: false,
              fillColor: "#00FFFF",
              fillOpacity: 0.7,
              radius: 10
            }));
          }
        });
        $("#feature-list tbody").append('<tr class="feature-row" id="'+L.stamp(layer)+'"><td style="vertical-align: middle;"><img width="16" height="18" src="' + "<%= asset_path('marker-icon.png') %>" + '"></td><td class="feature-name">'+layer.feature.properties.label+'</td><td style="vertical-align: middle;"><i class="fa fa-chevron-right pull-right"></i></td></tr>');
        parkSearch.push({
          name: layer.feature.properties.label,
          source: "公園",
          id: L.stamp(layer),
          lat: layer.feature.geometry.coordinates[1],
          lng: layer.feature.geometry.coordinates[0]
        });
        //address: layer.feature.properties.ADDRESS1,
      }
    }
  });
  $.getJSON("/parks/all_geojson", function (data) {
    if(map != null) {
      parks.addData(data);
      map.addLayer(parkLayer);
    }
  });

  map = L.map("map", {
    zoom: 13,
    center: [35.355, 139.655],
    layers: [boundaries, cyberjapanStd, markerClusters, highlight],
    zoomControl: false,
    attributionControl: true
  });

  /* Layer control listeners that allow for a single markerClusters layer */
  map.on("overlayadd", function(e) {
    if (e.layer === parkLayer) {
      markerClusters.addLayer(parks);
    }
  });

  map.on("overlayremove", function(e) {
    if (e.layer === parkLayer) {
      markerClusters.removeLayer(parks);
    }
  });

  /* Clear feature highlight when map is clicked */
  map.on("click", function(e) {
    highlight.clearLayers();
  });

  /* GPS enabled geolocation control set to follow the user's location */
  var locateControl = L.control.locate({
    position: "topleft",
    drawCircle: true,
    follow: true,
    setView: true,
    keepCurrentZoomLevel: true,
    markerStyle: {
      weight: 1,
      opacity: 0.8,
      fillOpacity: 0.8
    },
    circleStyle: {
      weight: 1,
      clickable: false
    },
    icon: "icon-direction",
    metric: false,
    strings: {
      title: "My location",
      popup: "You are within {distance} {unit} from this point",
      outsideMapBoundsMsg: "You seem located outside the boundaries of the map"
    },
    locateOptions: {
      maxZoom: 18,
      watch: true,
      enableHighAccuracy: true,
      maximumAge: 10000,
      timeout: 10000
    }
  }).addTo(map);

  var zoomControl = L.control.zoom({
    position: "topleft"
  }).addTo(map);

  /* Larger screens get expanded layer control and visible sidebar */
  var isCollapsed = false;
  if (document.body.clientWidth <= 767) {
    isCollapsed = true;
  }

  var baseLayers = {
    "地理院標準地図": cyberjapanStd,
    "地理院淡色地図": cyberjapanPale,
    "Mapquest OSM": mapquestOSM,
  };

  var groupedOverlays = {
    "POI": {
      "<img src='<%= asset_path('marker-icon.png') %>' width='24' height='30'>&nbsp;公園": parkLayer
    }
  };

  var layerControl = L.control.groupedLayers(baseLayers, groupedOverlays, {
    collapsed: isCollapsed
  }).addTo(map);

  /* Highlight search box text on click */
  $("#searchbox").click(function () {
    $(this).select();
  });

  /* Typeahead search functionality */
  $(document).one("ajaxStop", function () {
    $("#loading").hide();
    /* Fit map to boundaries */
    map.fitBounds(boundaries.getBounds());
    featureList = new List("features", {valueNames: ["feature-name"]});
    featureList.sort("feature-name", {order:"asc"});

    var boundariesBH = new Bloodhound({
      name: "Boundaries",
      datumTokenizer: function (d) {
        return Bloodhound.tokenizers.whitespace(d.name);
      },
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      local: boundarySearch,
      limit: 10
    });

    var parksBH = new Bloodhound({
      name: "公園",
      datumTokenizer: function (d) {
        return Bloodhound.tokenizers.whitespace(d.name);
      },
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      local: parkSearch,
      limit: 10
    });

    boundariesBH.initialize();
    parksBH.initialize();

    /* instantiate the typeahead UI */
    $("#searchbox").typeahead({
      minLength: 3,
      highlight: true,
      hint: false
    }, {
      name: "公園",
      displayKey: "name",
      source: parksBH.ttAdapter(),
      templates: {
        header: "<h4 class='typeahead-header'><img src='#{asset_path('marker-icon.png')}' width='24' height='28'>&nbsp;公園</h4>",
        suggestion: Handlebars.compile(["{{name}}<br>&nbsp;<small>{{address}}</small>"].join(""))
      }
    }, {
      name: "境界線",
      displayKey: "name",
      source: boundariesBH.ttAdapter(),
      templates: {
        header: "<h4 class='typeahead-header'><img src='#{asset_path('globe.png')}' width='25' height='25'>&nbsp;境界線</h4>"
      }
    }).on("typeahead:selected", function (obj, datum) {
      if (datum.source === "公園") {
        if (!map.hasLayer(parkLayer)) {
          map.addLayer(parkLayer);
        }
        map.setView([datum.lat, datum.lng], 17);
        if (map._layers[datum.id]) {
          map._layers[datum.id].fire("click");
        }
      }
      if (datum.source === "境界線") {
        map.setView([datum.lat, datum.lng], 14);
      }
      if ($(".navbar-collapse").height() > 50) {
        $(".navbar-collapse").collapse("hide");
      }
    }).on("typeahead:opened", function () {
      $(".navbar-collapse.in").css("max-height", $(document).height() - $(".navbar-header").height());
      $(".navbar-collapse.in").css("height", $(document).height() - $(".navbar-header").height());
    }).on("typeahead:closed", function () {
      $(".navbar-collapse.in").css("max-height", "");
      $(".navbar-collapse.in").css("height", "");
    });
    $(".twitter-typeahead").css("position", "static");
    $(".twitter-typeahead").css("display", "block");
  });
});
